generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model post {
  id           Int            @id @default(autoincrement())
  type         String         @db.VarChar(20)
  body         String
  like_cont    Int            @default(0)
  created_at   DateTime       @default(now())
  user_id      Int?
  user         user?          @relation(fields: [user_id], references: [id])
  post_comment post_comment[]
  post_like    post_like[]
}

model post_comment {
  id         Int      @id @default(autoincrement())
  body       String
  created_at DateTime @default(now())
  post_id    Int?
  user_id    Int?
  post       post?    @relation(fields: [post_id], references: [id])
  user       user?    @relation(fields: [user_id], references: [id])
}

model post_like {
  id         Int      @id @default(autoincrement())
  liked      Boolean  @default(false)
  created_at DateTime @default(now())
  post_id    Int?
  user_id    Int?
  post       post?    @relation(fields: [post_id], references: [id])
  user       user?    @relation(fields: [user_id], references: [id])
}

model user {
  id           Int             @id @default(autoincrement())
  name         String          @db.VarChar(150)
  email        String          @unique @db.VarChar(255)
  passwordHash String          @db.VarChar(255)
  birthdate    String?         @db.VarChar(10)
  city         String?         @db.VarChar(120)
  work         String?         @db.VarChar(120)
  avatar       String          @default("default.jpg") @db.VarChar(120)
  cover        String          @default("cover.jpg") @db.VarChar(120)
  token        String          @db.VarChar(255)
  post         post[]
  post_comment post_comment[]
  post_like    post_like[]
  relation     user_relation[]
}

model user_relation {
  id        Int  @id @default(autoincrement())
  user_from Int
  user_to   Int
  user      user @relation(fields: [user_from], references: [id])
}
